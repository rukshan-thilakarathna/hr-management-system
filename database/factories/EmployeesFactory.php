<?php

namespace Database\Factories;

use App\Models\Employees;
use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Str;

class EmployeesFactory extends Factory
{
    /**
     * The name of the factory's corresponding model.
     *
     * @var string
     */
    protected $model = Employees::class;


    public function definition()
    {
        return [
            'uuid' => Str::uuid(),
            'user_id' => $this->faker->numberBetween(1, 100),
            'employee_id' => 'EMP' . $this->faker->unique()->numberBetween(1000, 9999),
            'card_no' => $this->faker->numerify('CARD#####'),
            'first_name' => $this->faker->firstName,
            'middle_name' => $this->faker->firstName,
            'last_name' => $this->faker->lastName,
            'email' => $this->faker->unique()->safeEmail,
            'phone' => $this->faker->phoneNumber,
            'profile_image' => $this->faker->imageUrl(),
            'alternate_phone' => $this->faker->phoneNumber,
            'employee_group_id' => $this->faker->numberBetween(1, 10),
            'present_address' => $this->faker->address,
            'permanent_address' => $this->faker->address,
            'degree_name' => $this->faker->word,
            'university_name' => $this->faker->company,
            'cgp' => $this->faker->randomFloat(2, 2.0, 4.0),
            'passing_year' => $this->faker->year,
            'company_id' => $this->faker->numberBetween(1, 100),
            'working_period' => $this->faker->numberBetween(1, 10) . ' years',
            'duties' => $this->faker->sentence,
            'supervisor' => $this->faker->name,
            'signature' => $this->faker->word,
            'is_admin' => $this->faker->boolean,
            'maiden_name' => $this->faker->lastName,
            'state_id' => $this->faker->stateAbbr,
            'city' => $this->faker->city,
            'citizenship' => 1,
            'joining_date' => $this->faker->date,
            'promotion_date' => $this->faker->date,
            'hire_date' => $this->faker->date,
            'termination_date' => $this->faker->date,
            'termination_reason' => $this->faker->sentence,
            'national_id' => $this->faker->numerify('NID#####'),
            'identification_attachment' => $this->faker->imageUrl(),
            'nationality' => $this->faker->country,
            'voluntary_termination' => $this->faker->boolean,
            'rehire_date' => $this->faker->date,
            'rate' => $this->faker->randomFloat(2, 10, 100),
            'pay_frequency_id' => $this->faker->numberBetween(1, 5),
            'duty_type_id' => $this->faker->numberBetween(1, 3),
            'gender_id' => $this->faker->numberBetween(1, 2),
            'marital_status_id' => $this->faker->numberBetween(1, 4),
            'attendance_time_id' => $this->faker->numberBetween(1, 10),
            'employee_type_id' => $this->faker->numberBetween(1, 3),
            'contract_start_date' => $this->faker->date,
            'contract_end_date' => $this->faker->date,
            'position_id' => $this->faker->numberBetween(1, 10),
            'department_id' => $this->faker->numberBetween(1, 10),
            'sub_department_id' => $this->faker->numberBetween(1, 10),
            'branch_id' => $this->faker->numberBetween(1, 5),
            'employee_code' => $this->faker->unique()->numberBetween(1000, 9999),
            'employee_device_id' => $this->faker->uuid,
            'highest_educational_qualification' => $this->faker->word,
            'pay_frequency_text' => $this->faker->word,
            'hourly_rate' => $this->faker->randomFloat(2, 10, 50),
            'hourly_rate2' => $this->faker->randomFloat(2, 10, 50),
            'home_department' => $this->faker->word,
            'department_text' => $this->faker->word,
            'class_code' => $this->faker->word,
            'class_code_desc' => $this->faker->sentence,
            'class_acc_date' => $this->faker->date,
            'class_status' => $this->faker->boolean,
            'is_supervisor' => $this->faker->boolean,
            'supervisor_id' => $this->faker->numberBetween(1, 100),
            'supervisor_report' => $this->faker->paragraph,
            'date_of_birth' => $this->faker->date,
            'ethnic_group' => $this->faker->word,
            'eeo_class_gp' => $this->faker->word,
            'ssn' => $this->faker->numerify('SSN#####'),
            'work_in_city' => $this->faker->city,
            'live_in_state' => 1,
            'home_email' => $this->faker->email,
            'business_email' => $this->faker->companyEmail,
            'home_phone' => $this->faker->phoneNumber,
            'business_phone' => $this->faker->phoneNumber,
            'cell_phone' => $this->faker->phoneNumber,
            'emergency_contact_person' => $this->faker->name,
            'emergency_contact_relationship' => $this->faker->word,
            'emergency_contact_country' => $this->faker->country,
            'emergency_contact_state' => $this->faker->stateAbbr,
            'emergency_contact_city' => $this->faker->city,
            'emergency_contact_post_code' => $this->faker->postcode,
            'emergency_contact_address' => $this->faker->address,
            'present_address_country' => $this->faker->country,
            'present_address_state' => $this->faker->stateAbbr,
            'present_address_city' => $this->faker->city,
            'present_address_post_code' => $this->faker->postcode,
            'present_address_address' => $this->faker->address,
            'permanent_address_country' => $this->faker->country,
            'permanent_address_state' => $this->faker->stateAbbr,
            'permanent_address_city' => $this->faker->city,
            'permanent_address_post_code' => $this->faker->postcode,
            'permanent_address_address' => $this->faker->address,
            'skill_type' => $this->faker->word,
            'skill_name' => $this->faker->word,
            'certificate_type' => $this->faker->word,
            'certificate_name' => $this->faker->word,
            'skill_attachment' => $this->faker->imageUrl(),
            'emergency_contact' => $this->faker->phoneNumber,
            'emergency_home_phone' => $this->faker->phoneNumber,
            'emergency_work_phone' => $this->faker->phoneNumber,
            'alter_emergency_contact' => $this->faker->phoneNumber,
            'alter_emergency_home_phone' => $this->faker->phoneNumber,
            'alter_emergency_work_phone' => $this->faker->phoneNumber,
            'sos' => $this->faker->word,
            'monthly_work_hours' => $this->faker->numberBetween(80, 200),
            'employee_grade' => $this->faker->word,
            'religion' => $this->faker->word,
            'no_of_kids' => $this->faker->numberBetween(0, 5),
            'blood_group' => $this->faker->randomElement(['A+', 'B+', 'O+', 'AB+']),
            'health_condition' => $this->faker->word,
            'is_disable' => $this->faker->boolean,
            'disabilities_desc' => $this->faker->sentence,
            'profile_img_name' => $this->faker->word,
            'profile_img_location' => $this->faker->imageUrl(),
            'national_id_no' => $this->faker->numerify('NID#####'),
            'iqama_no' => $this->faker->numerify('IQAMA#####'),
            'passport_no' => $this->faker->numerify('PASSPORT#####'),
            'driving_license_no' => $this->faker->numerify('DL#####'),
            'work_permit' => $this->faker->boolean,
            'is_active' => $this->faker->boolean,
            'is_left' => $this->faker->boolean,
            'created_by' => $this->faker->numberBetween(1, 100),
            'updated_by' => $this->faker->numberBetween(1, 100),
            'created_at' => $this->faker->dateTime,
            'updated_at' => $this->faker->dateTime,
            'deleted_at' => null,
        ];
    }
}
